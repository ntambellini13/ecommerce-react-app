{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  yield console.log('I am fired');\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/ntamb/OneDrive/Documents/Udemy Learning/Complete React Developer in 2020 (w Redux, Hooks, GraphQL)/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsAsync","collectionRef","firestore","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","console","log","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAAC,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAC1CC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAJ,EAAAA,aAAa,CACVK,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAJ,IAAAA,QAAQ,CAACO,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACD,GALH,EAMGG,KANH,CAMSC,KAAK,IAAIT,QAAQ,CAACU,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN1B;AAOI,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAGH;AAED,OAAO,UAAUZ,qBAAV,GAAkC;AACrC,QAAMP,SAAS,CACXC,eAAe,CAACmB,uBADL,EAEXlB,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {const collectionRef = firestore.collection('collections');\r\ndispatch(fetchCollectionsStart());\r\n\r\ncollectionRef\r\n  .get()\r\n  .then(snapshot => {\r\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    dispatch(fetchCollectionsSuccess(collectionsMap));\r\n  })\r\n  .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    yield console.log('I am fired');\r\n\r\n    \r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START, \r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}